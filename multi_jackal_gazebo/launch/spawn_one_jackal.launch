<?xml version="1.0"?>
<launch>
  <arg name="ns" default="" />
  <arg name="x" default="0" />
  <arg name="y" default="0" />
  <arg name="z" default="1" />
  <arg name="yaw" default="0" />
  <!-- <arg name="joystick" default="true" /> -->
  <!-- <arg name="config" default="base" /> -->
  <arg name="config" default="vlp_laser" />

  <param name="tf_prefix"  value="$(arg ns)"/>

  <!-- Load Jackal's description -->
  <arg name="env_runner" value="$(eval 'env_run' if not optenv('OS', 'unknown').lower().startswith('windows') else 'env_run.bat')"/>

  <param name="/$(arg ns)/robot_description"
        command="$(find multi_jackal_description)/scripts/$(arg env_runner)
                 $(find multi_jackal_description)/urdf/configs/$(arg config)
                 $(find xacro)/xacro $(find multi_jackal_description)/urdf/jackal.urdf.xacro 
                 'namespace:=$(arg ns)' 
                 " />


  <!-- Load Jackal's controllers -->
  <rosparam command="load" file="$(find multi_jackal_control)/config/control.yaml"  ns="$(arg ns)"/>
  <node name="controller_spawner" pkg="controller_manager" type="spawner"
        args="jackal_joint_publisher jackal_velocity_controller" ns="$(arg ns)"/>



  <!-- Spawn Jackal -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" ns="$(arg ns)"
	      args="-urdf -model $(arg ns) -param /$(arg ns)/robot_description -x $(arg x) -y $(arg y) -z $(arg z) -R 0 -P 0 -Y $(arg yaw)" /> 


  <!-- Load state publisher -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" ns="$(arg ns)">
    <param name="tf_prefix"  value="$(arg ns)"/>
    <param name="robot_description" value="/$(arg ns)/robot_description"/>
  </node>


  <!-- Localization Ground Truth "odom_msg"-->
  <node pkg="message_to_tf" type="message_to_tf" name="$(arg ns)_msg_to_tf" args="$(arg ns)/ground_truth/state"  >
     <param name="tf_prefix" type="string" value="$(arg ns)" />
  </node>


  <!-- Localization Ground Truth to TF-->
  <node pkg="tf" type="static_transform_publisher" name="g_world_to_$(arg ns)_world" args="0 0 0 0 0 0 1 world  $(arg ns)/world 100"/>


</launch>
